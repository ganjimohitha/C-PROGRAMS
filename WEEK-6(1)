#include<iostream>
using namespace std;
class complex{
	private:
		float real;
		float img;
	public:
		complex (float r=0, float i=0) : real(r),img(i) {}
	    void display(){
		    cout<< real <<" + "<<img<<"i"<<endl;
	    }
	    complex operator -(){
	    	return complex (-real,-img);
		}
		complex operator ++(){
			++real;
			++img;
			return *this;
		}
		complex operator+(const complex& obj){
			return complex(real + obj.real , img + obj.img);
		}
		complex operator -(const complex& obj){
			return complex(real - obj.real , img - obj.img);
		}
};
int main(){
	complex c1(5,4) ,c2(2,3), c3;
	cout<<"Original complex Numbers: "<<endl;
	cout<<"c1 = "; c1.display();
	cout<<"c2 = "; c2.display();
	c3 = -c1;
	cout << "\nAfter unary - on c1: "<<endl;
	cout<<"c3 = "; c3.display();
	++c1;
	cout << "\nAfter unary ++ on c1: "<<endl;
	cout<<"c1 = "; c1.display();
	c3 = c1+c2;
	cout << "\nAfter c1+c2: "<<endl;
	cout<<"c3 = "; c3.display();
	c3 = c1-c2;
	cout << "\nAfter c1-c2: "<<endl;
	cout<<"c3 = "; c3.display();
	return 0;
}
